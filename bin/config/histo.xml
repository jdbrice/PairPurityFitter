<?xml version="1.0" encoding="UTF-8"?>
<config>
	<Data name="d" treeName="PairDst" url="/Users/danielbrandenburg/bnl/local/work/dimuonAna/Plots/data/pair_dst_DNN_N6.root" />
	<TFile url="data/pair_pid_data.root" />

	<!-- <select all="((d1_mPt > 1.4 && d2_mPt < 1.4) || (d1_mPt < 1.4 && d2_mPt > 1.4))" /> -->
	<!-- <select all="((d1_mPt < 1.4 && d2_mPt < 1.4) && (d1_mPt > 1.2 && d2_mPt > 1.2) )" /> -->
	<select all="( (d1_mPt > 1.2 && d2_mPt > 1.2) )" />

	<!-- Think about other cuts that may be needed for consistency  -->
	<Transform>
		<Draw data="d" name="uls_pair_pid_vs_mass" draw="sqrt( pow( d1_mPid, 2 ) + pow( d2_mPid, 2 ) ) : mMass" select="{select:all} && mChargeSum==0" bins_x="bins.mass" bins_y="bins.pairPid" />
		<Draw data="d" name="ls_pair_pid_vs_mass" draw="sqrt( pow( d1_mPid, 2 ) + pow( d2_mPid, 2 ) ) : mMass" select="{select:all} && mChargeSum!=0" bins_x="bins.mass" bins_y="bins.pairPid" />
		<Draw data="d" name="lsp_pair_pid_vs_mass" draw="sqrt( pow( d1_mPid, 2 ) + pow( d2_mPid, 2 ) ) : mMass" select="{select:all} && mChargeSum==2" bins_x="bins.mass" bins_y="bins.pairPid" />
		<Draw data="d" name="lsn_pair_pid_vs_mass" draw="sqrt( pow( d1_mPid, 2 ) + pow( d2_mPid, 2 ) ) : mMass" select="{select:all} && mChargeSum==-2" bins_x="bins.mass" bins_y="bins.pairPid" />
	</Transform>

	<!-- correlations -->
	<Transform>
		<Draw data="d" name="uls_delta_pid" draw="mMass : abs( d1_mPid - d2_mPid ) : TMath::Min( d1_mPid, d2_mPid )" select="{select:all} && mChargeSum==0" bins_x="bins.pid" bins_y="bins.deltaPid" bins_z="bins.mass" />
		<Draw data="d" name="ls_delta_pid" draw="mMass : abs( d1_mPid - d2_mPid ) : TMath::Min( d1_mPid, d2_mPid )" select="{select:all} && mChargeSum!=0" bins_x="bins.pid" bins_y="bins.deltaPid" bins_z="bins.mass" />

		<Draw data="d" name="uls_delta_pt" draw="mMass : abs( d1_mPt - d2_mPt ) : TMath::Min( d1_mPt, d2_mPt )" select="{select:all} && mChargeSum==0" bins_x="bins.pt" bins_y="bins.deltaPt" bins_z="bins.mass" />
		<Draw data="d" name="ls_delta_pt" draw="mMass : abs( d1_mPt - d2_mPt ) : TMath::Min( d1_mPt, d2_mPt )" select="{select:all} && mChargeSum!=0" bins_x="bins.pt" bins_y="bins.deltaPt" bins_z="bins.mass" />

		<Draw data="d" name="uls_dpt" draw="mMass : d1_mPt : d2_mPt " select="{select:all} && mChargeSum==0" bins_x="bins.pt" bins_y="bins.pt" bins_z="bins.mass" />
		<Draw data="d" name="ls_dpt" draw="mMass : d1_mPt : d2_mPt " select="{select:all} && mChargeSum!=0" bins_x="bins.pt" bins_y="bins.pt" bins_z="bins.mass" />
	</Transform>

	<Transform>
		<Draw data="d" name="uls_pt1_vs_mass" draw="d1_mPt : mMass" select="{select:all} && mChargeSum==0" bins_x="bins.mass" bins_y="bins.pt" />
		<Draw data="d" name="uls_pt2_vs_mass" draw="d2_mPt : mMass" select="{select:all} && mChargeSum==0" bins_x="bins.mass" bins_y="bins.pt" />

		<Draw data="d" name="ls_pt1_vs_mass" draw="d1_mPt : mMass" select="{select:all} && mChargeSum!=0" bins_x="bins.mass" bins_y="bins.pt" />
		<Draw data="d" name="ls_pt2_vs_mass" draw="d2_mPt : mMass" select="{select:all} && mChargeSum!=0" bins_x="bins.mass" bins_y="bins.pt" />
	</Transform>

	<Transform>
		<Add save_as="uls_pt_vs_mass" nameA="uls_pt1_vs_mass" nameB="uls_pt2_vs_mass" />
		<Add save_as="ls_pt_vs_mass" nameA="ls_pt1_vs_mass" nameB="ls_pt2_vs_mass" />
	</Transform>

	<bins>
		<pairPid width="0.01" min="0.0" max="1.5" />
		<mass width="0.010" min="0" max="10" />
		<pt width="0.050" min="0" max="10.0" />
		<deltaPt width="0.050" min="0" max="10.0" />
		
		<pid width="0.01" min="-0.2" max="1.2" />
		<deltaPid width="0.01" min="-0.2" max="1.2" />
	</bins>

</config>